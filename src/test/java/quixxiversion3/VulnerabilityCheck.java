package quixxiversion3;

import java.awt.HeadlessException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.ArrayList;

import javafiles.ScreenCapture;

import org.apache.commons.io.FilenameUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.annotations.Test;

import pageobjects.Vulnerability;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;

public class VulnerabilityCheck {

	private static WebDriver driver;
	private static ExtentReports extent;
	private static ExtentTest parent;
	private static ExtentTest child1;
	private static ExtentTest child2;
	private static ArrayList<String> tabs1;

	public VulnerabilityCheck(WebDriver driver, ExtentReports extent, ExtentTest parent, ExtentTest child1, ExtentTest child2){

		this.driver=driver;
		this.extent=extent;
		this.parent=parent;
		this.child1=child1;
		this.child2=child2;
	}

	@Test(groups="positive", priority=1)
	public static synchronized void vulnerability() throws Exception {

		parent=extent.startTest("Vulnerability");
		child1=extent.startTest("Quixxi portal Vulnerability functional test");
		parent.appendChild(child1);

		//click myapp
		driver.findElement(By.xpath("html/body/div[4]/header[1]/div/div/div[2]/div/ul[4]/li/a/span")).click();
		Thread.sleep(3000);
		child1.log(LogStatus.INFO, "User clicked my app");
		Thread.sleep(2000);

		String url = driver.getCurrentUrl();

		int counter=0;

		String filename=null;
		String filewith_extension=null;

		try {

			while (counter<2){

				counter++;

				if (counter==1){

					filename=FilenameUtils.getBaseName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"MoneyTracker.apk");
					filewith_extension=FilenameUtils.getName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"MoneyTracker.apk");

				}else{

					filename=FilenameUtils.getBaseName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"HUETimeline.ipa");
					filewith_extension=FilenameUtils.getName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"HUETimeline.ipa");

				}


				//Home page
				if(url.contentEquals("https://sta-portal.quixxi.com/#/appList")){

					//Click Vulnerability check 
					driver.findElement(By.xpath("html/body/div[4]/header[2]/div/div[2]/div/a")).click();
					Thread.sleep(6000);
					child1.log(LogStatus.INFO, "User clicked vulnerability");
					Thread.sleep(2000);
					//Alert - New app
					driver.findElement(By.xpath(".//*[@id='subHeaderClick']/div/form/div/div[3]/button")).click();
					Thread.sleep(3000);
					child1.log(LogStatus.INFO, "User clicked new app");
					Thread.sleep(2000);
					WebElement textbox = driver.findElement(By.xpath(".//*[@id='subHeaderClick']/div/form/div/div[2]/div/input"));
					String valueintextbox = textbox.getAttribute("Value");
					System.out.println(valueintextbox);

					//Checking value is present or not in New app alert textbox	

					if(valueintextbox == null || valueintextbox.isEmpty()){
						textbox.sendKeys(filename);
						driver.findElement(By.xpath(".//*[@id='subHeaderClick']/div/form/div/div[3]/button[1]")).click();
						Thread.sleep(3000);
						child1.log(LogStatus.INFO, "New app Text Box is Empty");
						Thread.sleep(2000);
					}
					else
					{
						child1.log(LogStatus.INFO, "Previous Text present" + textbox.getText());
						Thread.sleep(2000);
						textbox.clear();
						textbox.sendKeys(filename);
						Thread.sleep(2000);
						driver.findElement(By.xpath(".//*[@id='subHeaderClick']/div/form/div/div[3]/button[1]")).click();
						Thread.sleep(3000);
						child1.log(LogStatus.INFO, "User typed app name ::"+filename);
						Thread.sleep(2000);
					}
					Thread.sleep(7000);

					//Checking Newly created application is present or not in Homepage/My Apps page

					driver.findElement(By.xpath("html/body/div[4]/header[2]/div/div[1]/div/input")).sendKeys(filename);
					Thread.sleep(3000);
					String newappname = driver.findElement(By.xpath("//*[@id='uiview']/div[1]/div[3]/div[2]/a/div/div[3]/h3")).getText();
					WebElement appname = driver.findElement(By.xpath("//*[@id='uiview']/div[1]/div[3]/div[2]/a/div/div[3]/h3"));

					if(newappname.equalsIgnoreCase(filename)){
						child1.log(LogStatus.INFO, "New application present");
						Thread.sleep(2000);
						appname.click();
						Thread.sleep(6000);
						String title = driver.getTitle();
						// click assess now button
						Thread.sleep(3000);
						driver.findElement(By.xpath(".//*[@id='uiview']/section/div/div[2]/div[2]/div[2]/button")).click();
						Thread.sleep(3000);
						child1.log(LogStatus.INFO, "User clicked Assess now button in Dashboard Overview page");
						Thread.sleep(2000);
						//Upload apk
						driver.findElement(By.xpath(".//*[@id='dropfile']/div/div[2]/label/div")).click();
						Thread.sleep(3000);
						child1.log(LogStatus.INFO, "User clicked upload apk");
						Thread.sleep(2000);

						StringSelection selection=new StringSelection(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+"\\"+filewith_extension);
						Toolkit.getDefaultToolkit().getSystemClipboard().setContents(selection, null);
						Thread.sleep(6000);
						Robot robot = new Robot();
						robot.keyPress(KeyEvent.VK_CONTROL );
						robot.keyPress(KeyEvent.VK_V);
						robot.keyRelease(KeyEvent.VK_CONTROL);
						robot.keyRelease(KeyEvent.VK_V);
						Thread.sleep(3000);
						robot.keyPress(KeyEvent.VK_ENTER);
						robot.keyRelease(KeyEvent.VK_ENTER);
						Thread.sleep(6000);

						child1.log(LogStatus.INFO, "User uploaded the file :: "+filewith_extension);
						Thread.sleep(2000);

						//checking if subscription exists

						String subscription="";

						if(driver.findElement(By.xpath("//*[@id='uiview']/div[2]/div/div[1]/div[5]/div[1]/h5")).isDisplayed()){

							subscription=driver.findElement(By.xpath("//*[@id='uiview']/div[2]/div/div[1]/div[5]/div[1]/h5")).getText();

							if(subscription.equalsIgnoreCase("subscription")){

								//scroll down 

								((JavascriptExecutor)driver).executeScript("window.scrollBy(0,600)");
								Thread.sleep(3000);

								child1.log(LogStatus.INFO, "User pressed pagedown button");
								Thread.sleep(2000);

								//click the subscription
								driver.findElement(By.xpath("//*[@id='uiview']/div[2]/div/div[1]/div[5]/div[2]/div/div[1]/div[2]/div/table/tbody/tr[5]/td[3]/div/button")).click();
								Thread.sleep(6000);
								child1.log(LogStatus.INFO, "User clicked "+driver.findElement(By.xpath("//*[@id='uiview']/div[2]/div/div[1]/div[5]/div[2]/div/div[1]/div[2]/div/table/tbody/tr[5]/td[3]/div/button")).getText());
								Thread.sleep(2000);
								
								//click the confirmation box
								driver.findElement(By.xpath("//*[@id='planProcessingView']/div/div/div/form/div[2]/div[2]/div[2]/div/div/button[2]")).click();
								Thread.sleep(3000);
								child1.log(LogStatus.INFO, "User clicked "+driver.findElement(By.xpath("//*[@id='planProcessingView']/div/div/div/form/div[2]/div[2]/div[2]/div/div/button[2]")).getText());
								Thread.sleep(2000);
							}	
						}

						Thread.sleep(6000);

						//Click Next in subscription screen
						driver.findElement(By.xpath("//*[@id='uiview']/div[2]/div/div[1]/div[7]/button")).click();
						Thread.sleep(3000);
						child1.log(LogStatus.INFO, "User clicked next button in subscription page");
						Thread.sleep(2000);

						//scroll the page up

						((JavascriptExecutor)driver).executeScript("window.scrollBy(0,-500)", "");
						Thread.sleep(3000);

						child1.log(LogStatus.INFO, "User pressed pageup key");
						Thread.sleep(2000);

						portalCompilation();

						Thread.sleep(20000);

						//wait to load next page(i.e)Report page	
						//WebDriverWait wait = new WebDriverWait(driver,250);
						if(driver.findElement(By.xpath(".//*[@id='androidReport']/div[1]/div[2]/div[2]"))!=null){

							child1.log(LogStatus.INFO, "APK Report generated");
							Thread.sleep(2000);

						}else {

							child1.log(LogStatus.INFO, "APK Report not generated");
							Thread.sleep(2000);
						}

						// click myapp
						driver.findElement(By.xpath("html/body/div[4]/header[1]/div/div/div[2]/div/ul[4]/li/a/span")).click();
						Thread.sleep(3000);
						child1.log(LogStatus.INFO, "User clicked my app");
						Thread.sleep(2000);

					}
					else{

						child1.log(LogStatus.INFO, "New application missing");
						Thread.sleep(2000);
					}

				}
				//Login
				else
				{
					child1.log(LogStatus.INFO, "Invalid Credentials...");
					Thread.sleep(2000);
				}
			}

			extent.endTest(parent);

		} catch (HeadlessException e) {
			// TODO Auto-generated catch block
			child1.log(LogStatus.ERROR, e.fillInStackTrace().toString());
			Thread.sleep(2000);
			extent.endTest(parent);

		} catch (Exception e) {
			// TODO Auto-generated catch block
			child1.log(LogStatus.FAIL, e.fillInStackTrace().toString(), child1.addBase64ScreenShot(ScreenCapture.encodeBase64String(driver, "vulnerabilityerror")));
			Thread.sleep(6000);

			extent.endTest(parent);
		}

	}


	@Test(groups="positive", priority=2)
	public static synchronized void externalVulnerability() throws Exception {

		child2=extent.startTest("Verifying external vulnerability site functionality");
		parent.appendChild(child2);

		// load vulnerability site
		Robot robot = new Robot();
		robot.keyPress(KeyEvent.VK_CONTROL);
		robot.keyPress(KeyEvent.VK_T);
		robot.keyRelease(KeyEvent.VK_CONTROL);
		robot.keyRelease(KeyEvent.VK_T);
		Thread.sleep(3000);
		child2.log(LogStatus.INFO, "User opened new tab");

		// get all windows opened
		tabs1=new ArrayList<String>(driver.getWindowHandles());

		driver.switchTo().window(tabs1.get(1));
		Thread.sleep(3000);
		driver.get("https://vulnerabilitytest.quixxi.com");
		Thread.sleep(6000);
		child2.log(LogStatus.INFO, "User loaded :: "+driver.getCurrentUrl()+" in the browser.");
		String url = driver.getCurrentUrl();

		int counter=0;

		String filename=null;
		String filewith_extension=null;

		try {

			while (counter<2){

				counter++;

				if (counter==1){

					filename=FilenameUtils.getBaseName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"MoneyTracker.apk");
					filewith_extension=FilenameUtils.getName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"MoneyTracker.apk");

				}else{

					filename=FilenameUtils.getBaseName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"HUETimeline.ipa");
					filewith_extension=FilenameUtils.getName(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+File.separator+"HUETimeline.ipa");

				}

				//Home page
				if(url.contentEquals("https://vulnerabilitytest.quixxi.com/#/")){

					//Click to upload 
					Vulnerability.upload(driver).click();
					child2.log(LogStatus.INFO, "User clicked upload");
					Thread.sleep(3000);

					StringSelection selection1=new StringSelection(javafiles.FilesAndPaths.apkPath().getAbsolutePath()+"\\"+filewith_extension);
					Toolkit.getDefaultToolkit().getSystemClipboard().setContents(selection1, null);
					//					driver.findElement(By.xpath(".//*[@id='dropfile']/div")).click();
					Thread.sleep(5000);
					robot.keyPress(KeyEvent.VK_CONTROL );
					robot.keyPress(KeyEvent.VK_V);
					robot.keyRelease(KeyEvent.VK_CONTROL);
					robot.keyRelease(KeyEvent.VK_V);
					Thread.sleep(3000);
					robot.keyPress(KeyEvent.VK_ENTER);
					robot.keyRelease(KeyEvent.VK_ENTER);
					Thread.sleep(6000);

					child2.log(LogStatus.INFO, "User uploaded the file :: "+filewith_extension);
					Thread.sleep(2000);

					Vulnerability.testyourappButton(driver).click();
					Thread.sleep(3000);
					child2.log(LogStatus.INFO, "User clicked test your app button");
					Thread.sleep(2000);

					externalCompilation();

					if (counter==1){

						child2.log(LogStatus.INFO, child2.addBase64ScreenShot(ScreenCapture.encodeBase64String(driver, "VulnerabilityAndroidResult")));
						Thread.sleep(6000);

					}else {

						child2.log(LogStatus.INFO, child2.addBase64ScreenShot(ScreenCapture.encodeBase64String(driver, "VulnerabilityIPAResult")));
						Thread.sleep(6000);

					}
					//wait in the report page
					Thread.sleep(4000);

					//scroll the pagedown

					if ( counter==1){

						((JavascriptExecutor)driver).executeScript("window.scrollBy(0,400)", "");
						Thread.sleep(3000);

						child2.log(LogStatus.INFO, "User clicked page down key");
						Thread.sleep(2000);

						// Register now
						Vulnerability.name(driver).clear();
						Thread.sleep(1000);
						Vulnerability.name(driver).sendKeys("Mahendran");
						Thread.sleep(1000);
						child2.log(LogStatus.INFO, "User typed name :: "+Vulnerability.name(driver).getText());
						Thread.sleep(2000);

						Vulnerability.email(driver).clear();
						Thread.sleep(1000);
						Vulnerability.email(driver).sendKeys("jantest1lakeba@lakeba.com");
						Thread.sleep(1000);
						child2.log(LogStatus.INFO, "User typed emailid:: "+Vulnerability.email(driver).getText());
						Thread.sleep(2000);

						Vulnerability.phone(driver).clear();
						Thread.sleep(1000);
						Vulnerability.phone(driver).sendKeys("0422668898");
						Thread.sleep(1000);
						child2.log(LogStatus.INFO, "User typed phone :: "+Vulnerability.phone(driver).getText());
						Thread.sleep(2000);

						Vulnerability.company(driver).clear();
						Thread.sleep(1000);
						Vulnerability.company(driver).sendKeys("ABC Company pyt Ltd");
						Thread.sleep(1000);
						child2.log(LogStatus.INFO, "User typed company :: "+Vulnerability.company(driver).getText());
						Thread.sleep(2000);

						Vulnerability.location(driver).clear();
						Thread.sleep(1000);
						Vulnerability.location(driver).sendKeys("India");
						Thread.sleep(1000);
						child2.log(LogStatus.INFO, "User type location :: "+Vulnerability.location(driver).getText());
						Thread.sleep(2000);

						Vulnerability.submit(driver).click();
						Thread.sleep(10000);
						child2.log(LogStatus.INFO, "User clicked submit button");
						Thread.sleep(2000);
						
						// click test your app button
						driver.findElement(By.xpath("/html/body/div[3]/div[3]/div[2]/div[5]/div[4]/button[2]")).click();
						child2.log(LogStatus.INFO, "User clicked Test your app button");
						Thread.sleep(2000);

					}

				}
			}

			extent.endTest(parent);

		} catch (Exception e) {
			// TODO Auto-generated catch block
			child2.log(LogStatus.FAIL, e.fillInStackTrace().toString(), child2.addBase64ScreenShot(ScreenCapture.encodeBase64String(driver, "vulnerabilityerror")));
			Thread.sleep(6000);

			extent.endTest(parent);

		}

	}

	@Test(groups="positive", priority=3)
	public static synchronized void inviteDeveloper() throws Exception {

		try {
				
			//WebDriverWait wait1 = new WebDriverWait(driver,10);
			if(driver.findElement(By.xpath("/html/body/div[3]/div[1]/div/div/div[3]/h5/span"))!=null){

				child2.log(LogStatus.INFO, "Your report has been emailed");
				Thread.sleep(2000);

			}else {

				child2.log(LogStatus.INFO, "Report not generated and mailed");
				Thread.sleep(2000);
			}
			
			// click test your app button
			driver.findElement(By.xpath("/html/body/div[3]/div[3]/div[2]/div[5]/div[4]/button[2]")).click();
			child2.log(LogStatus.INFO, "User clicked Test your app button");
			Thread.sleep(2000);

			Vulnerability.inviteMailid(driver).sendKeys("jantest1lakeba@gmail.com");
			Thread.sleep(2000);
			child2.log(LogStatus.INFO, "User typed invitemaild id :: "+Vulnerability.inviteMailid(driver).getText());
			Thread.sleep(2000);

			Vulnerability.inviteButton(driver).click();
			Thread.sleep(3000);
			child2.log(LogStatus.INFO, "User typed invite button");
			Thread.sleep(2000);

			// wait for the text to appear
			//WebDriverWait wait2 = new WebDriverWait(driver,10);
			if(driver.findElement(By.xpath("html/body/div[3]/div[2]/div/div[2]/div/div[1]/div[2]"))!=null){

				child2.log(LogStatus.INFO, "You have successfully asked your developer to test your app.  text appeared");
				Thread.sleep(2000);

			}else {

				child2.log(LogStatus.INFO, "You have successfully asked your developer to test your app. text not appeared");
				Thread.sleep(2000);
			}

			// move page down
			((JavascriptExecutor)driver).executeScript("window.scrollBy(0,500)", "");
			Thread.sleep(3000);
			child2.log(LogStatus.INFO, "User pressed pagedown key");
			Thread.sleep(2000);

			// recipient mailid for report

			Vulnerability.reportMailid(driver).click();
			Thread.sleep(2000);
			child2.log(LogStatus.INFO, "User clicked report mail id");
			Thread.sleep(2000);

			Vulnerability.reportMailid(driver).sendKeys("jantest1lakeba@gmail.com");
			Thread.sleep(2000);
			child2.log(LogStatus.INFO, "User type report mail id :: "+Vulnerability.reportMailid(driver).getText());
			Vulnerability.getReportButton(driver).click();
			Thread.sleep(2000);
			child2.log(LogStatus.INFO, "User clicked get report button");
			

			//opening gmail

			Robot robot=new Robot();
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_T);
			robot.keyRelease(KeyEvent.VK_CONTROL);
			robot.keyRelease(KeyEvent.VK_T);
			Thread.sleep(3000);

			child2.log(LogStatus.INFO, "User opened new tab for gmail");
			Thread.sleep(2000);
			tabs1=new ArrayList<String>(driver.getWindowHandles());

			driver.switchTo().window(tabs1.get(2));
			Thread.sleep(3000);
			driver.get("https://gmail.com");
			Thread.sleep(8000);
			child2.log(LogStatus.INFO, "User opened :: "+driver.getCurrentUrl());
			Thread.sleep(2000);

			// click sign in in google.com
			driver.findElement(By.xpath("html/body/nav/div/a[2]")).click();
			Thread.sleep(3000);

			// enter mailid
			driver.findElement(By.xpath("//*[@id='identifierId']")).sendKeys("jantest1lakeba@gmail.com");
			Thread.sleep(2000);

			// click next button
			driver.findElement(By.xpath("//*[@id='identifierNext']/content")).click();
			Thread.sleep(3000);

			//enter password
			driver.findElement(By.xpath("//*[@id='password']/div[1]/div/div[1]/input")).sendKeys("M@he1234");
			Thread.sleep(3000);

			//click next button
			driver.findElement(By.xpath("//*[@id='passwordNext']/content")).click();
			Thread.sleep(10000);

			// select the first mail
			//			driver.findElement(By.xpath("//*[@id=':35']/td[4]")).click();
			//			Thread.sleep(10000);
			robot.mouseMove(320,315);
			robot.mousePress(InputEvent.BUTTON1_MASK);
			robot.mouseRelease(InputEvent.BUTTON1_MASK);
			Thread.sleep(8000);


			// click freescan button in mail
			robot.mouseMove(775,540);
			robot.mousePress(InputEvent.BUTTON1_MASK);
			robot.mouseRelease(InputEvent.BUTTON1_MASK);
			Thread.sleep(8000);

			//			// delete mail
			//			robot.mouseMove(465,204);
			//			robot.mousePress(InputEvent.BUTTON1_MASK);
			//			robot.mouseRelease(InputEvent.BUTTON1_MASK);
			//			Thread.sleep(8000);


			tabs1=new ArrayList<String>(driver.getWindowHandles());

			// close the vulnerability in tab index
			driver.switchTo().window(tabs1.get(3));
			Thread.sleep(2000);
			driver.close();
			//			
			//			// click back icon
			//			driver.findElement(By.xpath("html/body/div[7]/div[3]/div/div[2]/div[1]/div[2]/div/div/div/div/div[1]/div[2]/div[1]/div/div[1]/div/div/div")).click();
			//			Thread.sleep(3000);
			//			
			//			// click first record
			//			driver.findElement(By.xpath("html/body/div[7]/div[3]/div/div[2]/div[1]/div[2]/div/div/div/div/div[2]/div/div[1]/div/div[1]/div[6]/div/div[1]/div[2]/div/table/tbody/tr[1]/td[4]/div[2]/span")).click();
			//			Thread.sleep(3000);
			//			
			//			// click delete button
			//			driver.findElement(By.xpath("html/body/div[7]/div[3]/div/div[2]/div[1]/div[2]/div/div/div/div/div[1]/div/div[1]/div[1]/div/div/div[2]/div[3]/div/div")).click();
			//			Thread.sleep(3000);

			// close the gmail in tab index
			driver.switchTo().window(tabs1.get(2));
			Thread.sleep(3000);
			driver.close();
			Thread.sleep(2000);

			// close the vulnerability tab
			driver.switchTo().window(tabs1.get(1));
			Thread.sleep(3000);
			driver.close();
			Thread.sleep(2000);

			// switch to quixxi application window
			driver.switchTo().window(tabs1.get(0));
			Thread.sleep(3000);
			extent.endTest(parent);

		} catch (Exception e) {
			// TODO Auto-generated catch block
			child2.log(LogStatus.FAIL, e.fillInStackTrace().toString(), child2.addBase64ScreenShot(ScreenCapture.encodeBase64String(driver, "VulnerabilitySiteError")));
			Thread.sleep(6000);

			extent.endTest(parent);

		}

	}

	public static synchronized void waitForCompilation()throws Exception{

		boolean compiled = false;
		long sleepcount=1000;

		try {

			Thread.sleep(3000);
			WebElement element = driver.findElement(By.xpath("//*[@id='circleCompleted']/div/div[1]"));
			Thread.sleep(3000);

			do {

				sleepcount = sleepcount + 1000;

				if (element.getText().equalsIgnoreCase("100%") ) {

					compiled=true;

				}else if(sleepcount>50000){

					System.out.println(sleepcount);

					compiled=true;
				}

			} while (compiled != true);

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public static synchronized void externalCompilation()throws Exception {

		boolean compiled = false;

		try {

			Thread.sleep(2000);
			WebElement element = driver.findElement(By.xpath("//*[@id='circle']/div/div[1]"));
			//*[@id="circleCompleted"]/div/div[1]
			do {

				if (element.getText().equalsIgnoreCase("95%") ) {

					compiled=true;
				}

			} while (compiled != true);

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static synchronized void portalCompilation() throws Exception {

		boolean compiled = false;
		long sleepcount=1000;

		try {

			Thread.sleep(2000);
			WebElement element = driver.findElement(By.xpath("//*[@id='dropfile']/div/div[3]/h1"));
			//*[@id="circleCompleted"]/div/div[1]
			do {

				sleepcount=sleepcount+1000;

				if (element.getText().equalsIgnoreCase("100%") ) {

					compiled=true;

				}else if(sleepcount>30000) {

					System.out.println(sleepcount);
					child1.log(LogStatus.INFO, "Webdriver Skipping this Compilation due to long duration", child1.addBase64ScreenShot(ScreenCapture.encodeBase64String(driver, "compilationdelay")));
					Thread.sleep(6000);

					compiled=true;
				}

			} while (compiled != true);

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}
